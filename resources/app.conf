[cli]
class_name = zensols.cli.ActionCliManager
apps = list: pkg_cli, log_cli, config_cli, list_actions_cli,
     info_app, download_app, backup_app, report_app, sheet_app, sync_app
cleanups = list: pkg_cli, log_cli, config_cli, list_actions_cli, cli,
     info_app, download_app, backup_app, report_app, sheet_app, sync_app
default_action = sync

[log_cli]
class_name = zensols.cli.LogConfigurator
log_name = ${package:name}
format = %%(asctime)s[%%(levelname)s]:%%(name)s %%(message)s
default_app_level = info
loggers = dict: {'garminexport.garminclient': 'info'}

[pkg_cli]
class_name = zensols.cli.PackageInfoImporter

[config_cli]
class_name = zensols.cli.ConfigurationImporter
type = import
section = config_import

[config_import]
sections = list: config_imp

[config_imp]
type = importini
config_files = list: 
    ^{config_path},
    resource: resources/defaults.conf,
    resource: resources/google-sheets.conf,
    resource: resources/activity.conf,
    resource: resources/persist.conf,
    ^{config_path},
    resource: resources/obj.conf

[list_actions_cli]
class_name = zensols.cli.ListActions

[info_app]
class_name = zensols.garmdown.InfoApplication
manager = instance: manager

[download_app]
class_name = zensols.garmdown.DownloadApplication
manager = instance: manager
backuper = instance: backuper

[backup_app]
class_name = zensols.garmdown.BackupApplication
backuper = instance: backuper

[report_app]
class_name = zensols.garmdown.ReporterApplication
reporter = instance: reporter

[sheet_app]
class_name = zensols.garmdown.SheetApplication
sheet_updater = instance: sheet_updater

[sync_app]
class_name = zensols.garmdown.SyncApplication
manager = instance: manager
backuper = instance: backuper
sheet_updater = instance: sheet_updater
