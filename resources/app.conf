[cli]
class_name = zensols.cli.ActionCliManager
# the list of applications to invoke on start up
apps = list: pkg_cli, log_cli, config_cli, list_actions_cli,
     info_app, download_app, backup_app, report_app
# declare sections to remove
cleanups = list: pkg_cli, log_cli, config_cli, list_actions_cli, cli,
     info_app, download_app, backup_app, report_app

[log_cli]
class_name = zensols.cli.LogConfigurator
log_name = ${package:name}
format = %%(asctime)s[%%(levelname)s]:%%(name)s %%(message)s
#default_level = debug
default_app_level = debug
#loggers = dict: {'garminexport.garminclient': 'debug'}

[pkg_cli]
class_name = zensols.cli.PackageInfoImporter

[config_cli]
class_name = zensols.cli.ConfigurationImporter
type = import
section = config_import

[config_import]
sections = list: config_imp

[config_imp]
type = importini
# source the config file for forward propogating option interpolation; then
# source the object factory sections, finally source the configuration file
# again for any section overwrites
config_files = list: 
    ^{config_path},
    resource: resources/obj.conf,
    ^{config_path}

[list_actions_cli]
class_name = zensols.cli.ListActions

[info_app]
class_name = zensols.garmdown.InfoApplication
manager = instance: manager

[download_app]
class_name = zensols.garmdown.DownloadApplication
manager = instance: manager
backuper = instance: backup

[backup_app]
class_name = zensols.garmdown.BackupApplication
backuper = instance: backup

[report_app]
class_name = zensols.garmdown.ReporterApplication
reporter = instance: reporter
